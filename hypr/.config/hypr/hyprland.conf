# vim: set filetype=hyprlang :

# See https://wiki.hyprland.org/Configuring/Monitors/
monitor=,1920x1080@60,0x0,1


# See https://wiki.hyprland.org/Configuring/Keywords/ for more

# Execute apps at launch
exec-once = waybar
exec-once = hyprpaper
exec-once = hypridle
exec-once = wlsunset -S 06:30 -s 18:30 -g 0.9 -t 4500

# Source a file (multi-file configs)
# source = ~/.config/hypr/myColors.conf

# Set programs that you use
$terminal = kitty
$fileManager = nautilus
$menu = fuzzel
$logoutmenu = wlogout

# Some default env vars.
env = XCURSOR_SIZE,24
env = QT_QPA_PLATFORMTHEME,qt5ct # change to qt6ct if you have that
env = QT_AUTO_SCREEN_SCALE_FACTOR,1
env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1
env = QT_QPA_PLATFORM,wayland;xcb

# For all categories, see https://wiki.hyprland.org/Configuring/Variables/
input {
    kb_layout = us
    kb_variant =
    kb_model =
    kb_options =
    kb_rules =

    follow_mouse = 1

    touchpad {
        natural_scroll = yes
    }

    sensitivity = 0 # -1.0 to 1.0, 0 means no modification.
}

general {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more

    gaps_in = 5
    gaps_out = 10
    border_size = 2
    col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg
    col.inactive_border = rgba(595959aa)
    layout = dwindle
    resize_on_border = true

    # Please see https://wiki.hyprland.org/Configuring/Tearing/ before you turn this on
    allow_tearing = false
}

decoration {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more

    rounding = 10
    
    blur {
        enabled = true
        size = 8
        passes = 2
        ignore_opacity = true
        new_optimizations = true
    }

    active_opacity = 0.98
    inactive_opacity = 0.9
    drop_shadow = yes
    shadow_range = 4
    shadow_render_power = 3
    col.shadow = rgba(1a1a1aee)
}

animations {
    enabled = yes

    # Some default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more

    bezier = myBezier, 0.05, 0.9, 0.1, 1.05

    animation = windows, 1, 3, myBezier, slide
    animation = windowsOut, 1, 5, default, slide
    animation = border, 1, 10, default
    animation = borderangle, 1, 8, default
    animation = fade, 1, 3, default
    animation = workspaces, 1, 3, default
}

dwindle {
    # See https://wiki.hyprland.org/Configuring/Dwindle-Layout/ for more
    pseudotile = yes 
    preserve_split = yes 
}

gestures {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more
    workspace_swipe = true
}

misc {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more
    force_default_wallpaper = 0 # Set to 0 or 1 to disable the anime mascot wallpapers
    disable_splash_rendering = true
    focus_on_activate = true
}


windowrulev2 = tile,class:^(kitty)$
# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more
windowrulev2 = suppressevent maximize, class:.* 


# See https://wiki.hyprland.org/Configuring/Keywords/ for more
$mainMod = SUPER

# bindings, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mainMod, Q, killactive, 
bind = $mainMod, V, togglefloating, 
bind = $mainMod, F, fullscreen, 
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, W, togglesplit, # dwindle

# execute programs with bindings
bind = $mainMod, M, exec, $logoutmenu 
bind = $mainMod, R, exec, $fileManager
bind = $mainMod, D, exec, $menu
bind = $mainMod, Return, exec, $terminal

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d
# vim version
bind = $mainMod, H, movefocus, l
bind = $mainMod, L, movefocus, r
bind = $mainMod, K, movefocus, u
bind = $mainMod, J, movefocus, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Example special workspace (scratchpad)
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# will switch to a submap called resize
bind = ALT, R, submap, resize

# will start a submap called "resize"
submap = resize

# sets repeatable binds for resizing the active window
binde =, right  , resizeactive, 10    0
binde =, left   , resizeactive, -10   0
binde =, up     , resizeactive, 0     -10
binde =, down   , resizeactive, 0     10
binde =, l      , resizeactive, 10    0
binde =, h      , resizeactive, -10   0
binde =, k      , resizeactive, 0     -10
binde =, j      , resizeactive, 0     10

# use reset to go back to the global submap
bind =,escape, submap, reset 

# will reset the submap, which will return to the global submap
submap = reset

bindel =, XF86MonBrightnessUp  , exec, brightnessctl set 5%+
bindel =, XF86MonBrightnessDown, exec, brightnessctl set 5%-

bindel =, XF86AudioRaiseVolume , exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
bindel =, XF86AudioLowerVolume , exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindl  =, XF86AudioMute        , exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle

# screenshot all screen
bind =,                 Print, exec, grim
# screenshot all screen and copy
bind = SHIFT,           Print, exec, grim - | wl-copy

# screenshot selection
bind = $mainMod,        Print, exec, grim -g "$(slurp)"
# screenshot selection and copy
bind = $mainMod SHIFT,  Print, exec, grim -g "$(slurp)" - | wl-copy

